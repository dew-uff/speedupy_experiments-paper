import time
import sys
import numpy as np
# r = [541, 436, 647, 658, 510, 748, 500, 745, 461, 844, 818, 654, 405, 493, 276, 422, 84, 243, 310, 978, 403, 605, 44, 861, 80, 548, 687, 134, 406, 485, 161, 708, 608, 723, 183, 375, 75, 401, 218, 81, 931, 375, 714, 979, 757, 730, 717, 709, 52, 642, 177, 378, 288, 486, 247, 398, 321, 24, 125, 677, 293, 841, 319, 839, 544, 3, 416, 916, 433, 674, 192, 376, 64, 501, 138, 266, 461, 715, 447, 870, 930, 414, 262, 736, 683, 294, 92, 292, 574, 43, 181, 742, 733, 722, 473, 475, 800, 920, 221, 471, 281, 421, 735, 202, 660, 500, 443, 56, 253, 58, 437, 101, 191, 233, 352, 813, 226, 980, 872, 70, 897, 738, 209, 507, 400, 511, 874, 948, 847, 775, 381, 879, 188, 932, 692, 916, 370, 122, 903, 313, 254, 14, 793, 356, 184, 141, 971, 486, 888, 678, 132, 46, 279, 385, 86, 928, 801, 151, 533, 958, 174, 823, 297, 781, 873, 744, 180, 3, 400, 588, 30, 992, 252, 571, 174, 810, 493, 859, 460, 4, 497, 710, 914, 412, 249, 548, 751, 104, 340, 434, 125, 847, 963, 538, 941, 351, 174, 145, 755, 412, 197, 941, 397, 554, 106, 785, 165, 477, 5, 477, 167, 171, 594, 235, 653, 558, 407, 229, 477, 153, 19, 837, 439, 794, 857, 806, 193, 289, 708, 920, 658, 70, 736, 759, 996, 684, 357, 155, 552, 420, 525, 843, 935, 642, 107, 30, 6, 274, 295, 709, 823, 785, 197, 899, 176, 778, 815, 611, 698, 235, 909, 375, 801, 973, 630, 859, 872, 754, 145, 934, 47, 56, 830, 869, 563, 123, 453, 807, 66, 792, 269, 710, 388, 915, 571, 304, 507, 54, 225, 671, 52, 953, 897, 714, 440, 401, 896, 879, 627, 457, 757, 915, 352, 957, 66, 490, 778, 232, 632, 838, 750, 977, 660, 959, 978, 719, 547, 775, 199, 626, 452, 502, 23, 7, 18, 259, 307, 584, 947, 610, 223, 776, 873, 774, 84, 349, 838, 399, 227, 397, 206, 985, 666, 989, 255, 142, 788, 105, 243, 583, 711, 159, 200, 113, 150, 92, 521, 420, 808, 619, 68, 389, 305, 703, 494, 120, 333, 879, 165, 747, 307, 158, 727, 133, 997, 299, 118, 544, 812, 856, 913, 807, 526, 356, 527, 853, 977, 392, 131, 430, 29, 858, 740, 23, 554, 496, 692, 922, 286, 367, 391, 12, 970, 739, 14, 209, 657, 382, 449, 416, 823, 350, 135, 315, 527, 702, 229, 420, 574, 968, 854, 294, 54, 510, 568, 77, 27, 532, 556, 34, 929, 854, 101, 219, 928, 822, 67, 578, 17, 304, 188, 488, 565, 13, 30, 536, 142, 281, 973, 892, 493, 57, 724, 909, 702, 157, 178, 915, 907, 376, 422, 127, 465, 255, 415, 729, 728, 948, 110, 307, 237, 250, 636, 535, 914, 997, 183, 958, 809, 625, 995, 423, 374, 769, 495, 740, 864, 541, 279, 516, 943, 771, 214, 93, 754, 861, 744, 513, 621, 918, 409, 851, 924, 315, 520, 9, 927, 367, 403, 397, 417, 893, 765, 23, 982, 956, 588, 325, 182, 652, 345, 371, 57, 806, 774, 743, 375, 868, 318, 154, 355, 962, 43, 135, 672, 492, 103, 275, 969, 188, 756, 521, 131, 949, 489, 832, 699, 483, 58, 586, 157, 832, 910, 452, 221, 262, 980, 762, 878, 48, 70, 241, 86, 736, 887, 975, 844, 761, 23, 779, 971, 325, 314, 237, 856, 363, 21, 470, 781, 215, 73, 771, 136, 847, 275, 903, 62, 864, 93, 665, 473, 28, 963, 964, 933, 530, 717, 743, 648, 950, 619, 192, 166, 791, 927, 347, 548, 177, 287, 171, 147, 944, 654, 647, 673, 923, 167, 935, 714, 759, 162, 886, 130, 749, 20, 446, 58, 321, 950, 592, 709, 458, 655, 332, 375, 136, 555, 870, 533, 314, 657, 40, 229, 469, 643, 576, 564, 629, 115, 785, 704, 432, 305, 733, 857, 7, 272, 699, 922, 693, 143, 179, 201, 986, 70, 516, 492, 610, 425, 718, 597, 959, 141, 99, 971, 460, 645, 910, 420, 70, 672, 350, 433, 251, 589, 429, 821, 953, 951, 519, 229, 732, 876, 856, 780, 304, 313, 432, 799, 775, 985, 846, 556, 436, 563, 346, 867, 555, 440, 234, 704, 756, 698, 426, 808, 703, 290, 995, 98, 380, 211, 810, 250, 884, 416, 858, 997, 390, 459, 392, 247, 102, 270, 653, 877, 452, 809, 707, 703, 939, 824, 871, 716, 135, 383, 882, 854, 806, 146, 566, 757, 492, 69, 977, 370, 433, 92, 626, 339, 288, 190, 545, 501, 820, 709, 231, 674, 443, 504, 753, 269, 675, 626, 39, 959, 80, 742, 433, 201, 752, 405, 603, 983, 505, 883, 704, 804, 458, 806, 991, 202, 883, 862, 122, 920, 886, 790, 354, 454, 169, 458, 976, 275, 574, 505, 210, 658, 602, 792, 278, 352, 893, 895, 484, 294, 372, 559, 962, 83, 891, 956, 173, 1, 425, 248, 410, 374, 309, 143, 998, 50, 477, 389, 756, 117, 270, 396, 951, 866, 896, 828, 930, 349, 185, 48, 13, 532, 320, 484, 685, 510, 247, 404, 872, 478, 223, 317, 639, 660, 615, 599, 250, 87, 806, 543, 180, 231, 152, 841, 445, 643, 61, 820, 291, 946, 229, 963, 362, 964, 596, 59, 487, 808, 157, 536, 159, 167, 655, 678, 635, 754, 350, 665, 701, 213, 333, 397, 732, 197, 435, 253, 818, 329, 631, 275, 192, 459, 471, 495, 185, 907, 117, 984, 785, 286, 902, 420, 10, 126, 394, 947, 349, 224, 624, 196, 501, 977, 175, 349, 3, 772, 471, 166, 83, 840, 542, 677, 434, 958, 588, 889, 359, 525, 140, 822, 450, 965, 676, 186, 121, 248, 550, 477, 252, 576, 699, 265, 595, 531, 259, 770, 827, 530, 914, 631, 778, 187, 593, 241, 637, 212, 639, 287, 561, 488, 350, 35, 392, 905, 116, 935, 367, 325, 336, 625, 96, 904, 171, 771, 371, 745, 15, 341, 677, 158, 582, 619, 387, 973, 711]
# r_teste = r[0:50]

def get_empirical_CVaR(rewards, alpha = 0.9):
    
    a = sorted(list(rewards).copy(), reverse= True)

    for i in range(len(a)):
      a[i] = int(a[i])

    a = np.array(a)

    p = 1. * (np.arange(len(a)) + 1) / len(a)
    q_a = a[np.where(p >= (1 - alpha) )[0][0]]

    check = a < q_a

    if (np.where(check == True)[0]).size == 0:
        ind = 0
        temp = a[:ind + 1]
    else:
        ind = (np.where(check == True)[0][0] - 1)
        temp = a[:ind + 1]

    return (sum(temp) / len(temp))  
    
   
 

def main(rewards):
    print(get_empirical_CVaR(rewards, 0.9))
  

if __name__ == "__main__":
    import random
    random.seed(0)
    # n = [int(x) for x in sys.argv[1:-2]]
    n = [random.randint(0, 1e9) for i in range (int(float(sys.argv[1])))]
    start = time.perf_counter()
    main(n)
    print(time.perf_counter()-start)
